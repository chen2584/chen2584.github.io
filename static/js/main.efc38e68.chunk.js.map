{"version":3,"sources":["images/me.jpg","components/Header/index.tsx","components/Body/index.tsx","components/Main/index.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Header","props","printCurrentPage","window","print","state","Button","color","className","onClick","this","Icon","name","Image","src","Me","size","bordered","circular","centered","React","Component","Body","MainPage","Container","App","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"iGAAAA,EAAOC,QAAU,IAA0B,gC,8VCMtBC,E,YACjB,WAAYC,GAAY,IAAD,8BACnB,4CAAMA,KAMVC,iBAAmB,WACfC,OAAOC,SANP,EAAKC,MAAQ,GAFM,E,sEAYnB,OACI,6BACI,kBAACC,EAAA,EAAD,CAAQC,MAAM,OAAOC,UAAU,eAAeC,QAASC,KAAKR,kBACxD,kBAACS,EAAA,EAAD,CAAMC,KAAK,UADf,SAGA,kBAACC,EAAA,EAAD,CAAOC,IAAKC,IAAIC,KAAK,SAASC,UAAQ,EAACC,UAAQ,EAACC,UAAQ,IACxD,yBAAKX,UAAU,oBACX,wBAAIA,UAAU,WAAd,oBACA,uBAAGA,UAAU,cACT,sCADJ,sCACqD,6BADrD,yCAIA,uBAAGA,UAAU,eACT,qCADJ,iCAC+C,mCAD/C,aACoE,6BAChE,qCAFJ,uC,GAzBgBY,IAAMC,WCHrBC,G,mBACjB,WAAYrB,GAAY,IAAD,8BACnB,4CAAMA,KACDI,MAAQ,GAFM,E,sEAOnB,OACI,yBAAKG,UAAU,kBACX,2BACI,yBAAKA,UAAU,eAAf,aACA,iGAEJ,2BACI,yBAAKA,UAAU,eAAf,qBACA,6BAAK,oCAAL,4BACA,6BAAK,sCAAL,WACA,6BAAK,sCAAL,UACA,6BAAK,6CAAL,iBACA,6BAAK,2CAAL,SACA,6BAAK,wCAAL,iDAEJ,2BACI,yBAAKA,UAAU,eAAf,aACA,2FAC+D,6BAD/D,kDAEmD,6BAC/C,kCAHJ,WAOJ,2BACI,yBAAKA,UAAU,eAAf,UACA,6BACI,oDADJ,yEACsG,6BAClG,2CAFJ,kFAEsG,6BAClG,qDAHJ,yHAGuJ,6BACnJ,qCAJJ,uGAQJ,2BACI,yBAAKA,UAAU,eAAf,eACA,qDACyB,iDADzB,8BAC6E,6BACzE,4BACI,8DACA,qGAJR,6BAM8B,iDAN9B,kCAOI,4BACI,wLACA,wMACA,qJACA,gDAXR,2CAa4C,0DAb5C,yBAcI,4BACI,uGACA,8EACA,qDACA,qFACA,gFACA,sEACA,8FACA,mG,GAlEMY,IAAMC,YCGnBE,G,mBACjB,WAAYtB,GAAY,IAAD,8BACnB,4CAAMA,KACDI,MAAQ,GAFM,E,sEAOnB,OACI,kBAACmB,EAAA,EAAD,CAAWhB,UAAU,kBACjB,kBAAC,EAAD,MACA,kBAAC,EAAD,W,GAXsBY,IAAMC,YCI7BI,EANO,WACpB,OACE,kBAAC,EAAD,OCMgBC,QACW,cAA7BvB,OAAOwB,SAASC,UAEe,UAA7BzB,OAAOwB,SAASC,UAEhBzB,OAAOwB,SAASC,SAASC,MACvB,2DCVNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SDiI3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.efc38e68.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/me.4f0e3fcb.jpg\";","import React from \"react\";\r\nimport { Button, Icon, Image } from \"semantic-ui-react\";\r\nimport \"./header.css\";\r\nimport Me from \"../../images/me.jpg\";\r\n\r\n\r\nexport default class Header extends React.Component<{}, {}> {\r\n    constructor(props: {}) {\r\n        super(props);\r\n        this.state = {\r\n\r\n        };\r\n    }\r\n\r\n    printCurrentPage = () => {\r\n        window.print();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Button color=\"blue\" className=\"print-button\" onClick={this.printCurrentPage}>\r\n                    <Icon name='print' />Print\r\n                </Button>\r\n                <Image src={Me} size=\"medium\" bordered circular centered />\r\n                <div className=\"header-container\">\r\n                    <h1 className=\"my-name\">Worameth Semapat</h1>\r\n                    <p className=\"my-address\">\r\n                        <b>Address</b>: 46/41 Moo 3 Pho Khun Thale Road, <br />\r\n                        Makham Tia, Surathani 84000, Thailand\r\n                    </p>\r\n                    <p className=\"my-contract\">\r\n                        <b>E-mail</b>: worameth.semapat@gmail.com, <b>Line</b>: chen2584<br />\r\n                        <b>Github</b>: https://github.com/chen2584\r\n                    </p>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from \"react\";\r\nimport \"./body.css\";\r\n\r\nexport default class Body extends React.Component<{}, {}> {\r\n    constructor(props: {}) {\r\n        super(props);\r\n        this.state = {\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"body-container\">\r\n                <p>\r\n                    <div className=\"topic-title\">Objective</div>\r\n                    <div>Looking for new job as Backend Developer or Fullstack Developer</div>\r\n                </p>\r\n                <p>\r\n                    <div className=\"topic-title\">Persernal Details</div>\r\n                    <div><b>Name:</b> Worameth Semapat (Chen)</div>\r\n                    <div><b>Height:</b> 183cm.</div>\r\n                    <div><b>Weight:</b> 78kg.</div>\r\n                    <div><b>Date of Birth:</b> 04 July 1992</div>\r\n                    <div><b>Nationality:</b> Thai</div>\r\n                    <div><b>Language:</b> Thai (Native), English (Upper Intermediate)</div>\r\n                </p>\r\n                <p>\r\n                    <div className=\"topic-title\">Education</div>\r\n                    <div>\r\n                        Bachelor of Science (Information Technology) (2012 - 2016),<br />\r\n                        Rajamangala University of Technology Srivijaya.<br />\r\n                        <b>GPA</b>: 3.49\r\n                    </div>\r\n                </p>\r\n\r\n                <p>\r\n                    <div className=\"topic-title\">Skills</div>\r\n                    <div>\r\n                        <b>Programming Languages</b>: C#, VB.NET, Java, Kotlin, SQL, JavaScript, TypeScript, Dart, Python.<br />\r\n                        <b>Technologies</b>: Docker, Alfresco, Node.js, RabbitMQ, Redis, Solr, OAuth2, SQL, MongoDB, gRPC.<br />\r\n                        <b>Framework & Libraries:</b> ASP.NET Core, Entity Framework, SignalR, NSwag, Spring Boot, React, React Native, Angular, Flutter, Electron, JQuery.<br />\r\n                        <b>Tools:</b> GIT Version Control, VSCode, Visual Studio, IntelliJ, Sublime, Jenkins, Azure Devops, Cake Build.\r\n                    </div>\r\n                </p>\r\n\r\n                <p>\r\n                    <div className=\"topic-title\">Experiences</div>\r\n                    <div>\r\n                        1. Web Programmer at <b>Phathong Thungsong</b> (October 2016-March 2017).<br />\r\n                        <ul>\r\n                            <li>Created new Company's Website.</li>\r\n                            <li>Help my colleague to port application from Windows base to Web base.</li>\r\n                        </ul>\r\n                        2. Fullstack Developer at <b>B Circle Co., Ltd.</b> (December 2017-2020 February).\r\n                        <ul>\r\n                            <li>Main duty is write backend API and migration script for client company such as The Secretariat of the cabinet, The Civil Aviation Authority of Thailand.</li>\r\n                            <li>Write Alfresco's Webscript for client company, such as The National Broadcasting and Telecommunication Commission, The Secretariat of the cabinet, Thanachart Bank, etc.</li>\r\n                            <li>Write Mobile Appication for client company, such as Tourism Authority of Thailand, Siriraj Piyamaharajkarun Hospital.</li>\r\n                            <li>Taught interns.</li>\r\n                        </ul>\r\n                        3. IT Programmer / Backend-Developer at <b>Gravity Game Tech Co., Ltd.</b> (March 2020-Present).\r\n                        <ul>\r\n                            <li>Main duty is design and write anything that relate with Backend system.</li>\r\n                            <li>Fixed bug and maintain legacy and new Project.</li>\r\n                            <li>Implement Game's API.</li>\r\n                            <li>Implement Thirt-Party Payment Gateway (MOL Thailand).</li>\r\n                            <li>Design and Write Google OTP API for Game client.</li>\r\n                            <li>Design and Write KPI Tools (Game Log).</li>\r\n                            <li>Design and Write Game's Event website such as Wheel LuckySpin.</li>\r\n                            <li>Design and Write PreRegister website for incoming new game.</li>\r\n                        </ul>\r\n                    </div>\r\n                </p>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from \"react\";\r\nimport { Container } from \"semantic-ui-react\";\r\nimport Header from \"../Header\";\r\nimport Body from \"../Body\";\r\nimport \"./main.css\";\r\n\r\nexport default class MainPage extends React.Component<{}, {}> {\r\n    constructor(props: {}) {\r\n        super(props);\r\n        this.state = {\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Container className=\"main-container\">\r\n                <Header />\r\n                <Body />\r\n             </Container>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport './App.css';\r\nimport MainPage from './components/Main';\r\n\r\nconst App: React.FC = () => {\r\n  return (\r\n    <MainPage />\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport 'semantic-ui-css/semantic.min.css'\r\nimport App from './App';\r\n\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}